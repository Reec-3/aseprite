name: Build Aseprite (Windows) # Still targeting Windows based on previous request

on:
  push:
    branches:
      - main # Your repository's default branch (assuming 'main' for Reec-3/aseprite)
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      # Set up environment variables for Visual Studio.
      # The exact path might vary slightly with VS versions, but 'vswhere' finds it.
      # We need to find the Developer Command Prompt for MSVC toolchain.
      # This is automatically handled by the 'vcvarsall.bat' call.

    steps:
      - name: Debug: Print GitHub Context
        run: |
          echo "GitHub Workspace: ${{ github.workspace }}"
          echo "GitHub Repository: ${{ github.repository }}"
          echo "GitHub Ref: ${{ github.ref }}"
          git config --get http.useragent

      - name: Checkout Aseprite Source (Your Fork)
        uses: actions/checkout@v4
        with:
          # *** FIX HERE: Point to your forked repository ***
          repository: Reec-3/aseprite
          # Use 'main' as the default branch for your fork.
          # If you're building a specific branch in your fork, change 'main' accordingly.
          ref: main
          path: aseprite

      - name: Checkout Skia Source (Aseprite's Skia Fork)
        uses: actions/checkout@v4
        with:
          # Skia should still come from aseprite's official Skia fork,
          # as your Aseprite fork will expect a specific Skia version that the Aseprite team uses.
          repository: aseprite/skia
          # IMPORTANT: Verify this Skia branch is compatible with the Aseprite version
          # you have in your fork. If your fork's `main` is up-to-date with upstream Aseprite's `main`,
          # then you'll need the Skia branch compatible with upstream Aseprite's `main`.
          ref: aseprite-m102 # This might need to be updated; check Aseprite's build docs.
          path: skia

      - name: Setup MSVC Environment
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          echo "VCINSTALLDIR: %VCINSTALLDIR%"
          echo "PATH: %PATH%"
          where cl
        shell: cmd

      - name: Configure and Build Skia
        working-directory: skia
        run: |
          python tools/gn/bootstrap/bootstrap.py --skip-gn-binaries
          ./bin/gn gen out/Release-x64 --args="is_debug=false skia_use_system_expat=false skia_use_system_libjpeg_turbo=false skia_use_system_libpng=false skia_use_system_libwebp=false skia_use_system_zlib=false skia_use_icu=false skia_enable_fontmgr_empty=false skia_enable_skottie=false skia_enable_tools=false skia_enable_gpu=true skia_gl_standard=gl"
          ninja -C out/Release-x64
        shell: cmd

      - name: Configure and Build Aseprite
        working-directory: aseprite
        run: |
          mkdir build
          cd build
          cmake `
            -DCMAKE_BUILD_TYPE=RelWithDebInfo `
            -DLAF_BACKEND=skia `
            -DSKIA_DIR=../../skia `
            -DSKIA_OUT_DIR=../../skia/out/Release-x64 `
            -G "Ninja" `
            ..
          cmake --build . --config RelWithDebInfo --verbose
        shell: cmd

      - name: Prepare Aseprite Application for Artifact
        run: |
          mkdir -p aseprite-build
          $build_config = "RelWithDebInfo"
          $exe_path = "aseprite/build/${build_config}/aseprite.exe"

          if (Test-Path $exe_path) {
            Copy-Item $exe_path -Destination "aseprite-build/"
          } else {
            Write-Host "Aseprite executable not found at $exe_path. Listing build directory for debugging:"
            Get-ChildItem -Path "aseprite/build" -Recurse
            exit 1
          }

          if (Test-Path "aseprite/data") {
            Copy-Item -Path "aseprite/data" -Destination "aseprite-build/data" -Recurse
          } else {
            Write-Host "Aseprite 'data' folder not found."
          }

          Get-ChildItem -Path "aseprite-build" -Recurse
        shell: pwsh

      - name: Upload Aseprite Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: aseprite-windows-build-${{ github.sha }}
          path: aseprite-build/
          retention-days: 7
          if-no-files-found: error
